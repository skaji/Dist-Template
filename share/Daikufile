# vim: filetype=perl

sub slurp { open my $fh, "<:utf8", $_[0] or die; local $/; <$fh> }
sub spew  { open my $fh, ">:utf8", $_[0] or die; print {$fh} $_[1] }

my $main_module_name = '<?= $arg->{dist_name} ?>';
my $main_module_path = 'lib/<?= $arg->{module_path} ?>';

task default => 'all';

desc '(this is default) test, regen, clean';
task all => [qw(test regen clean)];

desc "run test cases";
task test => 'Makefile' => sub {
    sh 'make', 'test';
};

desc "cleanup";
task clean => sub {
    unless (-f 'Makefile') {
        warn "Missing Makefile, so nothing to do.\n";
        return;
    }
    sh 'make', 'realclean';
};

desc "regenerate README.md and META.json";
task regen => ['README.md', 'META.json'];

file 'Makefile' => 'Makefile.PL' => sub {
    sh $^X, "Makefile.PL";
};

file 'README.md' => $main_module_path => sub {
    require Pod::Markdown;
    my $p = Pod::Markdown->new;
    $p->output_string(\my $markdown);
    $p->parse_string_document(slurp $main_module_path);
    spew "README.md", $markdown;
};

file 'META.json' => 'Makefile.PL' => sub {
    sh $^X, "Makefile.PL";
    sh 'make', 'metafile';
    my ($dir) = grep -d, glob "$main_module_name-*";
    return if !$dir || !-d $dir;
    my $meta = "$dir/META.json";
    sh 'cp', '-f', $meta, "META.json";
};
